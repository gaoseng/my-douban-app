{"version":3,"file":"react-svg.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import SVGInjector from '@tanem/svg-injector'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\ninterface Props {\n  evalScripts?: 'always' | 'once' | 'never'\n  onInjected?: (svg: SVGSVGElement) => void\n  renumerateIRIElements?: boolean\n  src: string\n  svgClassName?: string\n  svgStyle?: React.CSSProperties\n}\n\nexport default class ReactSVG extends React.Component<\n  Props &\n    React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >\n> {\n  static defaultProps = {\n    evalScripts: 'never',\n    onInjected: () => undefined,\n    renumerateIRIElements: true,\n    svgClassName: null,\n    svgStyle: {}\n  }\n\n  static propTypes = {\n    evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n    onInjected: PropTypes.func,\n    renumerateIRIElements: PropTypes.bool,\n    src: PropTypes.string.isRequired,\n    svgClassName: PropTypes.string,\n    svgStyle: PropTypes.object\n  }\n\n  container?: HTMLDivElement | null\n\n  refCallback: React.Ref<HTMLDivElement> = container => {\n    this.container = container\n  }\n\n  renderSVG() {\n    if (this.container instanceof Node) {\n      const {\n        evalScripts,\n        onInjected: each,\n        renumerateIRIElements,\n        src,\n        svgClassName,\n        svgStyle\n      } = this.props\n\n      const div = document.createElement('div')\n      div.innerHTML = ReactDOMServer.renderToStaticMarkup(\n        <div>\n          <div className={svgClassName} data-src={src} style={svgStyle} />\n        </div>\n      )\n\n      const wrapper = this.container.appendChild(\n        div.firstChild as HTMLDivElement\n      )\n\n      SVGInjector(wrapper.firstChild, {\n        each,\n        evalScripts,\n        renumerateIRIElements\n      })\n    }\n  }\n\n  removeSVG() {\n    if (\n      this.container instanceof Node &&\n      this.container.firstChild instanceof Node\n    ) {\n      this.container.removeChild(this.container.firstChild)\n    }\n  }\n\n  componentDidMount() {\n    this.renderSVG()\n  }\n\n  componentDidUpdate() {\n    this.removeSVG()\n    this.renderSVG()\n  }\n\n  componentWillUnmount() {\n    this.removeSVG()\n  }\n\n  render() {\n    const {\n      evalScripts,\n      onInjected,\n      renumerateIRIElements,\n      src,\n      svgClassName,\n      svgStyle,\n      ...rest\n    } = this.props\n\n    return <div {...rest} ref={this.refCallback} />\n  }\n}\n"],"names":["ReactSVG","container","refCallback","renderSVG","this","Node","props","evalScripts","each","onInjected","renumerateIRIElements","src","svgClassName","svgStyle","div","document","createElement","innerHTML","ReactDOMServer","renderToStaticMarkup","React.createElement","className","style","wrapper","appendChild","firstChild","SVGInjector","removeSVG","removeChild","componentDidMount","componentDidUpdate","componentWillUnmount","render","rest","ref","React","defaultProps"],"mappings":"sfAcqBA,6JAwBnBC,mBAEAC,YAAyC,SAAAD,KAClCA,UAAYA,oDAGnBE,wBACMC,KAAKH,qBAAqBI,KAAM,OAQ9BD,KAAKE,MANPC,IAAAA,YACYC,IAAZC,WACAC,IAAAA,sBACAC,IAAAA,IACAC,IAAAA,aACAC,IAAAA,SAGIC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAYC,eAAeC,qBAC7BC,+BACEA,2BAAKC,UAAWT,aAAwBD,EAAKW,MAAOT,UAIlDU,EAAUnB,KAAKH,UAAUuB,YAC7BV,EAAIW,YAGNC,YAAYH,EAAQE,WAAY,CAC9BjB,KAAAA,EACAD,YAAAA,EACAG,sBAAAA,QAKNiB,qBAEIvB,KAAKH,qBAAqBI,MAC1BD,KAAKH,UAAUwB,sBAAsBpB,WAEhCJ,UAAU2B,YAAYxB,KAAKH,UAAUwB,eAI9CI,kCACO1B,eAGP2B,mCACOH,iBACAxB,eAGP4B,qCACOJ,eAGPK,wBASM5B,KAAKE,MADJ2B,KANH1B,cACAE,aACAC,wBACAC,MACAC,eACAC,uIAIKO,sCAASa,GAAMC,IAAK9B,KAAKF,mBA7FEiC,iBAAjBnC,SAOZoC,aAAe,CACpB7B,YAAa,QACbE,WAAY,aACZC,uBAAuB,EACvBE,aAAc,KACdC,SAAU"}