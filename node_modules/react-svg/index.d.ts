import * as PropTypes from 'prop-types';
import * as React from 'react';
interface Props {
    evalScripts?: 'always' | 'once' | 'never';
    onInjected?: (svg: SVGSVGElement) => void;
    renumerateIRIElements?: boolean;
    src: string;
    svgClassName?: string;
    svgStyle?: React.CSSProperties;
}
export default class ReactSVG extends React.Component<Props & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>> {
    static defaultProps: {
        evalScripts: string;
        onInjected: () => undefined;
        renumerateIRIElements: boolean;
        svgClassName: null;
        svgStyle: {};
    };
    static propTypes: {
        evalScripts: PropTypes.Requireable<string>;
        onInjected: PropTypes.Requireable<(...args: any[]) => any>;
        renumerateIRIElements: PropTypes.Requireable<boolean>;
        src: PropTypes.Validator<string>;
        svgClassName: PropTypes.Requireable<string>;
        svgStyle: PropTypes.Requireable<object>;
    };
    container?: HTMLDivElement | null;
    refCallback: React.Ref<HTMLDivElement>;
    renderSVG(): void;
    removeSVG(): void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
export {};
